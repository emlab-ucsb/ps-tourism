<<<<<<< HEAD
# Get bounding box coordinates for area we want to plot
d2_coords = data.frame(lon = c(10, 10, 40, 40, 10),
lat = c(20, 45, 45, 20, 20)) %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326) %>%
st_transform(crs = st_crs(prj_moll)) %>%
st_bbox() # xmin, ymin, xmax, ymax
# d_coords = data.frame(lon = c(-10, -10, 40, 40, -10),
#                        lat = c(20, 70, 70, 20, 20)) %>%
#   st_as_sf(coords = c("lon", "lat"),
#            crs = 4326) %>%
#   st_transform(crs = st_crs(prj_moll)) %>%
#   st_bbox() # xmin, ymin, xmax, ymax
# Global map of extrapolated number of dives]
fig_1_d2 <- dive_map_global_pixel +
coord_sf(xlim = c(d2_coords[1], d2_coords[3]),
ylim = c(d2_coords[2], d2_coords[4])) +
theme(panel.border = element_rect(color = "black", fill = NA))
fig_1_d2
# Get bounding box coordinates for area we want to plot
e_coords = data.frame(lon = c(100, 100, 130, 130, 100),
lat = c(-10, 15, 15, -10, -10)) %>%
st_as_sf(coords = c("lon", "lat"),
crs = 4326) %>%
st_transform(crs = st_crs(prj_moll)) %>%
st_bbox() # xmin, ymin, xmax, ymax
# Global map of extrapolated number of dives]
fig_1_e <- dive_map_global_pixel +
coord_sf(xlim = c(e_coords[1], e_coords[3]),
ylim = c(e_coords[2], e_coords[4]))+
theme(panel.border = element_rect(color = "black", fill = NA))
fig_1_e
# Combine subplots
map_row_2 <- cowplot::plot_grid(fig_1_c + theme(legend.position = "none"),
fig_1_e + theme(legend.position = "none"),
nrow = 1,
rel_widths = c(1,1),
labels = c("C", "D"),
label_y = 1.1)
map_row_2
# Combine subplots
map_row_3 <- cowplot::plot_grid(fig_1_d + theme(legend.position = "none"),
fig_1_d2 + theme(legend.position = "none"),
nrow = 1,
rel_widths = c(1,1.05),
labels = c("E", "F"),
label_y = 1.1)
map_row_3
# Now add bigger map
map_column <- cowplot::plot_grid(fig_1_b + theme(legend.position = "none") + labs(title = "") + theme(plot.margin = margin(t = -0.1, unit='cm')),
map_row_2,
map_row_3,
nrow = 3,
rel_heights = c(5,3.5,3.5))
map_column
legend_row <- cowplot::plot_grid(cowplot::get_legend(fig_1_a + theme(legend.margin = margin(t = -0.05, unit='cm'))),
cowplot::get_legend(fig_1_b + theme(legend.margin = margin(t = -0.05, unit='cm'))),
nrow = 1,
rel_widths = c(0.85,1))
legend_row
top_section <- cowplot::plot_grid(fig_1_a + theme(legend.position = "none"),
map_column,
nrow = 1,
rel_widths = c(0.85,1),
labels = c("A", "B"),
label_y = 1)
# Now add left plot
fig_1 <- cowplot::plot_grid(top_section,
legend_row,
nrow = 2,
rel_heights = c(8,1.5))
save_plots(fig_1,
file_name = file.path(emlab_project_dir, "figures", "paper", "fig_1_v2.png"),
width_in = 7.25,
height_in = 8)
save_plots(fig_1,
file_name = file.path("/Users/kat/Github/tourism-mpa/", "figures", "main", "fig_1.png"),
width_in = 7.25,
height_in = 8)
fig_1
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 8))
fig_1_a
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 8))
fig_1_a
top_section <- cowplot::plot_grid(fig_1_a + theme(legend.position = "none"),
map_column,
nrow = 1,
rel_widths = c(0.85,1),
labels = c("A", "B"),
label_y = 1)
legend_row <- cowplot::plot_grid(cowplot::get_legend(fig_1_a + theme(legend.margin = margin(t = -0.05, unit='cm'))),
cowplot::get_legend(fig_1_b + theme(legend.margin = margin(t = -0.05, unit='cm'))),
nrow = 1,
rel_widths = c(0.85,1))
legend_row
# Now add left plot
fig_1 <- cowplot::plot_grid(top_section,
legend_row,
nrow = 2,
rel_heights = c(8,1.5))
save_plots(fig_1,
file_name = file.path(emlab_project_dir, "figures", "paper", "fig_1_v2.png"),
width_in = 7.25,
height_in = 8)
save_plots(fig_1,
file_name = file.path("/Users/kat/Github/tourism-mpa/", "figures", "main", "fig_1.png"),
width_in = 7.25,
height_in = 8)
fig_1
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 6))
fig_1_a
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 5))
fig_1_a
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.y = element_text(family = "Roboto", color = "#000000", size = 5))
fig_1_a
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 6))
fig_1_a
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text.x = element_text(family = "Roboto", color = "#000000", size = 6))
fig_1_a
top_section <- cowplot::plot_grid(fig_1_a + theme(legend.position = "none"),
map_column,
nrow = 1,
rel_widths = c(0.85,1),
labels = c("A", "B"),
label_y = 1)
# Now add bigger map
map_column <- cowplot::plot_grid(fig_1_b + theme(legend.position = "none") + labs(title = "") + theme(plot.margin = margin(t = -0.1, unit='cm')),
map_row_2,
map_row_3,
nrow = 3,
rel_heights = c(5,3.5,3.5))
map_column
legend_row <- cowplot::plot_grid(cowplot::get_legend(fig_1_a + theme(legend.margin = margin(t = -0.05, unit='cm'))),
cowplot::get_legend(fig_1_b + theme(legend.margin = margin(t = -0.05, unit='cm'))),
nrow = 1,
rel_widths = c(0.85,1))
legend_row
top_section <- cowplot::plot_grid(fig_1_a + theme(legend.position = "none"),
map_column,
nrow = 1,
rel_widths = c(0.85,1),
labels = c("A", "B"),
label_y = 1)
# Now add left plot
fig_1 <- cowplot::plot_grid(top_section,
legend_row,
nrow = 2,
rel_heights = c(8,1.5))
save_plots(fig_1,
file_name = file.path(emlab_project_dir, "figures", "paper", "fig_1_v2.png"),
width_in = 7.25,
height_in = 8)
save_plots(fig_1,
file_name = file.path("/Users/kat/Github/tourism-mpa/", "figures", "main", "fig_1.png"),
width_in = 7.25,
height_in = 8)
fig_1
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
legend.text = element_text(size = 8),
axis.text = element_text(family = "Roboto", color = "#000000", size = 6))
fig_1_a
theme_main_text <- function(){
graph_theme <- ggplot2::theme_minimal() +
ggplot2::theme(panel.border = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor=element_blank(),
legend.key.height = unit(3, "mm"),
legend.key.width = unit(20, "mm"),
legend.title.align = 0.5,
text = element_text(family = "Roboto", color = "#000000", size = 10),
legend.text = element_text(family = "Roboto", color = "#000000", size = 10),
legend.title = element_text(family = "Roboto Bold", color = "#000000", size = 10),
plot.title = element_text(family = "Roboto Bold", color = "#000000", size = 12),
plot.subtitle = element_text(family = "Roboto", color = "#000000", size = 12),
axis.title = element_text(family = "Roboto Bold", color = "#000000", size = 10),
axis.text = element_text(family = "Roboto", color = "#000000", size = 6),
strip.text = element_text(family = "Roboto Bold", color = "#000000", size = 10))
}
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal")
fig_1_a
# Panel A
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
axis.text = element_text(family = "Roboto", color = "#000000", size = 8))
fig_1_a
theme_main_text <- function(){
graph_theme <- ggplot2::theme_minimal() +
ggplot2::theme(panel.border = element_blank(),
panel.background = element_rect(fill = "transparent",colour = NA),
plot.background = element_rect(fill = "transparent",colour = NA),
panel.grid.minor=element_blank(),
legend.key.height = unit(3, "mm"),
legend.key.width = unit(20, "mm"),
legend.title.align = 0.5,
text = element_text(family = "Roboto", color = "#000000", size = 10),
legend.text = element_text(family = "Roboto", color = "#000000", size = 10),
legend.title = element_text(family = "Roboto Bold", color = "#000000", size = 10),
plot.title = element_text(family = "Roboto Bold", color = "#000000", size = 12),
plot.subtitle = element_text(family = "Roboto", color = "#000000", size = 12),
axis.title = element_text(family = "Roboto Bold", color = "#000000", size = 10),
axis.text = element_text(family = "Roboto", color = "#000000", size = 10),
strip.text = element_text(family = "Roboto Bold", color = "#000000", size = 10))
}
fig_1_a <- dive_dat_country %>%
dplyr::filter(site_classification == "Marine") %>%
mutate(display_name = str_replace(display_name, "\\*", "")) %>% # remove SIDs asterisks
group_by(protection_level, display_name, eez_ter1_iso3, eez_ter1_name) %>%
summarize(n_dives_extrap = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
group_by(display_name, eez_ter1_iso3, eez_ter1_name) %>%
mutate(total_dives = sum(n_dives_extrap, na.rm = T)) %>%
ungroup() %>%
mutate(percent_dives = (n_dives_extrap/total_dives)*100) %>%
mutate(site_rank = dense_rank(desc(total_dives))) %>%
dplyr::filter(site_rank <= 30) %>%
ggplot()+
aes(x = fct_reorder(display_name, total_dives), y = n_dives_extrap/1e6, fill = protection_level)+
geom_bar(stat = "identity", width = 0.8)+
labs(x = "", y = "Dives (millions per year, extrapolated)")+
scale_y_continuous(expand = c(0,0), limits = c(0,3), labels = comma)+
scale_fill_manual(values = protection_pal[1:5],
guide = guide_legend(reverse = F, title.position = "top", title.hjust = 0.5, nrow = 5, byrow = T, title = ""))+
coord_flip()+
theme_main_text()+
theme(plot.margin = unit(c(0.2,1.5,0.2,0.2), "cm"),
legend.position = "bottom",
legend.direction = "horizontal",
axis.text.y = element_text(family = "Roboto", color = "#000000", size = 8))
fig_1_a
# Now add bigger map
map_column <- cowplot::plot_grid(fig_1_b + theme(legend.position = "none") + labs(title = "") + theme(plot.margin = margin(t = -0.1, unit='cm')),
map_row_2,
map_row_3,
nrow = 3,
rel_heights = c(5,3.5,3.5))
map_column
legend_row <- cowplot::plot_grid(cowplot::get_legend(fig_1_a + theme(legend.margin = margin(t = -0.05, unit='cm'))),
cowplot::get_legend(fig_1_b + theme(legend.margin = margin(t = -0.05, unit='cm'))),
nrow = 1,
rel_widths = c(0.85,1))
legend_row
top_section <- cowplot::plot_grid(fig_1_a + theme(legend.position = "none"),
map_column,
nrow = 1,
rel_widths = c(0.85,1),
labels = c("A", "B"),
label_y = 1)
# Now add left plot
fig_1 <- cowplot::plot_grid(top_section,
legend_row,
nrow = 2,
rel_heights = c(8,1.5))
save_plots(fig_1,
file_name = file.path(emlab_project_dir, "figures", "paper", "fig_1_v2.png"),
width_in = 7.25,
height_in = 8)
save_plots(fig_1,
file_name = file.path("/Users/kat/Github/tourism-mpa/", "figures", "main", "fig_1.png"),
width_in = 7.25,
height_in = 8)
fig_1
=======
high_number_dive <- dives_input$n_dives_extrap_max[dives_input$cell_id %in% divepixels_unprotected]
sum((0.5*high_number_dive*(choke_price-price_per_dive_constant)))/1e9 #4.31 billion
change_consumer_suplus <- (0.5*shifted_number_dive*(new_choke_price-price_per_dive_constant))-(0.5*base_number_dive*(choke_price-price_per_dive_constant))
sum(change_dive_revenue/1e9)#billion
sum(change_consumer_suplus/1e9)#billion
(total_wtp <- effect_name + effect_biomass + effect_biodiversity)
(dive_tax <- (shifted_number_dive - base_number_dive)/parameter_b) #this is the same as total wtp
plot(total_wtp,dive_tax)#proof that total_wp is equal to the dive_tax
(tax_revenue <- dive_tax*base_number_dive)
sum(tax_revenue)/1e9 #this is how much you can get from pixel-specific tax when establishing an MPA and imposing tax that does not affect dive numbers
##what if we implement a tax of mean(user_fee_opt)?
#MANUSCRIPT STAT:  Imposing a dive fee equal to the additional WTP of divers holds dive numbers constant pre- and post- MPA network implementation, while generating x billion in additional revenue
sum(base_number_dive)
(tax_revenue_constant_tax <- sum(mean(user_fee_opt)*base_number_dive)/1e9)
#explore here --- different user fees.
explore_user_fee_wMPA <- list()
explore_user_fee_noMPA <- list()
wtp_combined <-effect_name + effect_biomass + effect_biodiversity
average_user_fee<-mean(wtp_combined)
average_user_fee
dive_group_size<-5 #this is for scenario with additional crowding -- sensitivity
reduce_wtp_crowd<-0.1 #this is for scenario with additional crowding -- sensitivity
source(here("scripts","functions","func_evaluate_divefee.R"))
##--SENSITIVITY ANALYSIS
#0.) base model
length(base_number_dive)
explore_user_fee_base <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=base_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_constant,congestion=0)
explore_user_fee_base %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
##1.) add diver congestion
#explore_user_fee_congestion <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=base_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_constant,congestion=1,reduce_wtp_crowd=reduce_wtp_crowd)
#explore_user_fee_congestion %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
#1.) lower estimate dive number
low_number_dive <- dives_input$n_dives_extrap_min[dives_input$cell_id %in% divepixels_unprotected]
explore_user_fee_ndivelow <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=low_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_constant,congestion=0)
explore_user_fee_ndivelow %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
#2.) Upper estimate dive number
high_number_dive <- dives_input$n_dives_extrap_max[dives_input$cell_id %in% divepixels_unprotected]
explore_user_fee_ndivehigh <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=high_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_constant,congestion=0)
explore_user_fee_ndivehigh %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
#4.) Price averaged per EEZ or Region if EEZ value unavailable
price_per_dive_country_region <- price_country_region_input %>% filter(cell_id %in% divepixels_unprotected) %>% select(price)
price_per_dive_country_region <- price_per_dive_country_region$price
explore_user_fee_eezprice <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=base_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_country_region,congestion=0)
explore_user_fee_eezprice %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
#5.) Interpolated price
price_per_dive_interpolated <- price_interpolated_input %>% filter(cell_id %in% divepixels_unprotected) %>% select(price)
price_per_dive_interpolated <- price_per_dive_interpolated$price
explore_user_fee_interpolatedprice <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=base_number_dive,choke_price=choke_price,price_per_dive=price_per_dive_interpolated,congestion=0)
explore_user_fee_interpolatedprice %>% filter(Scenario=="With MPA") %>% summarise(max = max(tax_revenue)/1e9) ##MAXIMUM DIVE FEE REVENUE
#6.) Normalization process of biodiversity benefit: just re-run the code by changing groupings (ter, sov, reg)
###----Add uncertainty bounds based on the number of dives data
#Number of dives in non-MPA dive pixels
ndives_range_unprotected <- dives_input %>% filter(cell_id %in% divepixels_unprotected)
head(ndives_range_unprotected)
explore_user_fee_repeat <- list()
index <- 0
for (i in 1:500){
index <- index+1
#option 1: add noise to individual dive site
#rand_number_dive <- ndives_range_unprotected %>% group_by(cell_id) %>% mutate(rand_mun=runif(1, min = 0, max = 1)) %>% mutate(n_dive_rand = round(n_dives_extrap_min+(rand_mun*(n_dives_extrap_max-n_dives_extrap_min))))
#option 2: add same noise to all dive site
rand_number_dive <- ndives_range_unprotected %>% mutate(rand_mun=runif(1, min = 0, max = 1)) %>% mutate(n_dive_rand = round(n_dives_extrap_min+(rand_mun*(n_dives_extrap_max-n_dives_extrap_min))))
explore_user_fee <- func_evaluate_divefee(wtp_combined=wtp_combined,base_number_dive=rand_number_dive$n_dive_rand,choke_price=choke_price,price_per_dive=price_per_dive_constant,congestion=0)
explore_user_fee$run <- index
explore_user_fee_repeat[[index]]<-explore_user_fee
}
explore_user_fee_merged <- do.call("rbind",explore_user_fee_repeat)
dim(explore_user_fee_merged)
head(explore_user_fee_merged)
# ### Figure 4 -------------------------------------------------------------------
# plot_theme <- theme_classic()+
#   theme(axis.title = element_text(size = 12),
#         axis.text = element_text(size = 10))
#
# fig_4_a <- ggplot(explore_user_fee_merged, aes(x=`fraction user fee opt`,y=`Tax revenue`/1e9,group=Scenario))+
#   geom_line(aes(linetype=Scenario), lwd = 1)+
#   labs(x ="", y = "Dive fee revenue \n(billion US$)")+
#   scale_linetype(guide = guide_legend(title.hjust = 0.5, title.position = "top"))+
#   plot_theme +
#   theme(legend.position = "bottom")
#
# fig_4_b <- ggplot(explore_user_fee_merged, aes(x=`fraction user fee opt`,y=`Change dive revenue`/1e9, group=Scenario))+
#   geom_line(aes(linetype=Scenario), lwd = 1)+
#   labs(x ="", y = "\u0394 dive revenue \n(billion US$)")+
#   plot_theme
#
# fig_4_c <- ggplot(explore_user_fee_merged, aes(x=`fraction user fee opt`, y=`Change consumer surplus`/1e9, group=Scenario))+
#   geom_line(aes(linetype=Scenario), lwd = 1)+
#   labs(x ="Average user fee per dive \n(US$)", y = "\u0394 consumer surplus \n(billion US$)")+
#   plot_theme
#
# fig_4_d <- ggplot(explore_user_fee_merged,aes(x=`fraction user fee opt`,y=`N dives`/1e6,group=Scenario))+
#   geom_line(aes(linetype=Scenario), lwd = 1)+
#   labs(x ="Average user fee per dive \n(US$)", y = "\u0394 # dives \n(million)")+
#   plot_theme
#
# # Combine into final plot
# fig_4_no_leg <- cowplot::plot_grid(fig_4_a + theme(legend.position = "none"),
#                                    fig_4_b + theme(legend.position = "none"),
#                                    fig_4_c + theme(legend.position = "none"),
#                                    fig_4_d + theme(legend.position = "none"),
#                                    ncol = 2,
#                                    labels = c("A)", "B)", "C)", "D)"),
#                                    rel_heights=c(1,1))
#
# fig_4 <- plot_grid(fig_4_no_leg,
#                    get_legend(fig_4_a +
#                                 theme(legend.margin = margin(t = 0.25, unit='cm'))),
#                    ncol = 1,
#                    rel_heights = c(6, 1))
#
# fig_4
#
# ggsave(here("figures","main","plot_explore_user_fee.jpg"),fig_4, width = 6.5, height = 6, units = "in")
mean_taxrevenue_db <- explore_user_fee_merged %>% select(dive_tax, tax_revenue, Scenario) %>% group_by(Scenario,dive_tax) %>% summarise(mean_taxrev = mean(tax_revenue))
head(mean_taxrevenue_db)
#MANUSCRIPT STAT: "We find that it is possible to generate up to x billion of revenue from user fees even without establishing MPAs on existing dive sites"
mean_taxrevenue_db %>% filter(Scenario=="No MPA") %>% summarise(max(mean_taxrev)/1e9)# Ans: 1.45
#MANUSCRIPT STAT: "The maximum possible amount of revenue that can be generated from dive fees also increases to x when dive fees are combined with highly protected MPAs"
mean_taxrevenue_db %>% filter(Scenario=="With MPA") %>% summarise(max(mean_taxrev)/1e9)# Ans: 2.53
panel1 <- explore_user_fee_merged %>% ggplot(aes(x=dive_tax,y=tax_revenue/1e9,color=Scenario, group=interaction(Scenario,run)))+geom_line(size=1, alpha=0.01)+
geom_line(data=mean_taxrevenue_db, aes(x=dive_tax, y=mean_taxrev/1e9, group=Scenario, linetype=Scenario))+theme_classic()+labs(x ="", y = "Dive fee revenue\n(billion US$)")+ theme(legend.position = "none")
panel1
max_val <- max(explore_user_fee_merged$tax_revenue/1e9)
min_val <- min(explore_user_fee_merged$tax_revenue/1e9)
min_ref <- min_val+0.6*(max_val-min_val)
#difference plot panel 1
data1 <- explore_user_fee_merged %>% select(dive_tax, tax_revenue, Scenario, run) %>% filter(Scenario =="With MPA")
data2 <- explore_user_fee_merged %>% select(dive_tax, tax_revenue, Scenario, run) %>% filter(Scenario =="No MPA")
diff_data <- left_join(data1,data2, by=c("dive_tax","run")) %>% mutate(difference = tax_revenue.x-tax_revenue.y)
mean_tax_revenue_diff <- diff_data %>% group_by(dive_tax) %>% summarise(mean_tax_revenue_diff = mean(difference))
panel1_diff <- diff_data %>% ggplot(aes(x=dive_tax,y=difference/1e9)) + geom_line(aes(group=run),size=1, alpha=0.01)+
geom_line(data=mean_tax_revenue_diff, aes(x=dive_tax, y=mean_tax_revenue_diff/1e9))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "Difference\n(billion US$)")+ theme(legend.position = "none")   +
theme(panel.background = element_rect(fill='transparent'),plot.background = element_rect(fill='transparent', color=NA),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),legend.background = element_rect(fill='transparent'),legend.box.background = element_rect(fill='transparent'))+
ylim(0,max(diff_data$difference/1e9))
panel1_diff
panel1_inset <- panel1+annotation_custom(grob = ggplotGrob(panel1_diff), xmin=75, xmax=200, ymin=min_ref, ymax=max_val)
#+geom_ribbon(data=mean_taxrevenue_db, aes(ymin=(mean_taxrev/1e9)-0.5, ymax=(mean_taxrev/1e9)+0.5, group=Scenario))
#see sample plotting here: https://thenode.biologists.com/visualizing-data-with-r-ggplot2/education/
mean_delta_dive_revenue <- explore_user_fee_merged %>% select(dive_tax, delta_dive_revenue, Scenario) %>% group_by(Scenario,dive_tax) %>% summarise(mean_delta_dive_revenue = mean(delta_dive_revenue))
panel2 <- explore_user_fee_merged %>% ggplot(aes(x=dive_tax,y=delta_dive_revenue/1e9,color=Scenario, group=interaction(Scenario,run)))+geom_line(size=1, alpha=0.01)+
geom_line(data=mean_delta_dive_revenue, aes(x=dive_tax, y=mean_delta_dive_revenue/1e9, group=Scenario, linetype=Scenario))+theme_classic()+labs(x ="", y = "\u0394 dive revenue\n(billion US$)")+ theme(legend.position = "none")
panel2
max_val <- max(explore_user_fee_merged$delta_dive_revenue/1e9)
min_val <- min(explore_user_fee_merged$delta_dive_revenue/1e9)
min_ref <- min_val+0.6*(max_val-min_val)
#difference plot panel 2
data1 <- explore_user_fee_merged %>% select(dive_tax, delta_dive_revenue, Scenario, run) %>% filter(Scenario =="With MPA")
data2 <- explore_user_fee_merged %>% select(dive_tax, delta_dive_revenue, Scenario, run) %>% filter(Scenario =="No MPA")
diff_data <- left_join(data1,data2, by=c("dive_tax","run")) %>% mutate(difference = delta_dive_revenue.x-delta_dive_revenue.y)
mean_delta_dive_revenue_diff <- diff_data %>% group_by(dive_tax) %>% summarise(mean_delta_dive_revenue_diff = mean(difference))
panel2_diff <- diff_data %>% ggplot(aes(x=dive_tax,y=difference/1e9)) + geom_line(aes(group=run),size=1, alpha=0.01)+
geom_line(data=mean_delta_dive_revenue_diff, aes(x=dive_tax, y=mean_delta_dive_revenue_diff/1e9))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "Difference\n(billion US$)")+ theme(legend.position = "none")+
theme(panel.background = element_rect(fill='transparent'),plot.background = element_rect(fill='transparent', color=NA),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),legend.background = element_rect(fill='transparent'),legend.box.background = element_rect(fill='transparent')) +
ylim(0,max(diff_data$difference/1e9))
panel2_diff
panel2_inset <- panel2+annotation_custom(grob = ggplotGrob(panel2_diff), xmin=75, xmax=200, ymin=min_ref, ymax=max_val)
#change consumer surplus plot
mean_delta_consumer_surplus <- explore_user_fee_merged %>% select(dive_tax, delta_consumer_surplus, Scenario) %>% group_by(Scenario,dive_tax) %>% summarise(mean_delta_consumer_surplus = mean(delta_consumer_surplus))
panel3 <- explore_user_fee_merged %>% ggplot(aes(x=dive_tax,y=delta_consumer_surplus/1e9,color=Scenario, group=interaction(Scenario,run)))+geom_line(size=1, alpha=0.01)+
geom_line(data=mean_delta_consumer_surplus, aes(x=dive_tax, y=mean_delta_consumer_surplus/1e9, group=Scenario, linetype=Scenario))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "\u0394 consumer surplus\n(billion US$)")+ theme(legend.position = "none")
panel3
max_val <- max(explore_user_fee_merged$delta_consumer_surplus/1e9)
min_val <- min(explore_user_fee_merged$delta_consumer_surplus/1e9)
min_ref <- min_val+0.6*(max_val-min_val)
#difference plot panel 3
data1<-explore_user_fee_merged %>% select(dive_tax, delta_consumer_surplus, Scenario, run) %>% filter(Scenario =="With MPA")
data2<-explore_user_fee_merged %>% select(dive_tax, delta_consumer_surplus, Scenario, run) %>% filter(Scenario =="No MPA")
diff_data <- left_join(data1,data2, by=c("dive_tax","run")) %>% mutate(difference = delta_consumer_surplus.x-delta_consumer_surplus.y)
mean_delta_consumer_surplus_diff <- diff_data %>% group_by(dive_tax) %>% summarise(mean_delta_consumer_surplus_diff = mean(difference))
panel3_diff <- diff_data %>% ggplot(aes(x=dive_tax,y=difference/1e9)) + geom_line(aes(group=run),size=1, alpha=0.01)+
geom_line(data=mean_delta_consumer_surplus_diff, aes(x=dive_tax, y=mean_delta_consumer_surplus_diff/1e9))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "Difference\n(billion US$)")+ theme(legend.position = "none")+
theme(panel.background = element_rect(fill='transparent'),plot.background = element_rect(fill='transparent', color=NA),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),legend.background = element_rect(fill='transparent'),legend.box.background = element_rect(fill='transparent')) +
ylim(0,max(diff_data$difference/1e9))
panel3_diff
panel3_inset <- panel3+annotation_custom(grob = ggplotGrob(panel3_diff), xmin=75, xmax=200, ymin=min_ref, ymax=max_val)
#change number of dive plot
mean_delta_number_dives <- explore_user_fee_merged %>% select(dive_tax, delta_number_dives, Scenario) %>% group_by(Scenario,dive_tax) %>% summarise(mean_delta_number_dives = mean(delta_number_dives))
panel4 <- explore_user_fee_merged %>% ggplot(aes(x=dive_tax,y=delta_number_dives/1e6,color=Scenario, group=interaction(Scenario,run)))+geom_line(size=1, alpha=0.01)+
geom_line(data=mean_delta_number_dives, aes(x=dive_tax, y=mean_delta_number_dives/1e6, group=Scenario, linetype=Scenario))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "\u0394 # dives\n(million)")+ theme(legend.position = "none")
panel4
max_val <- max(explore_user_fee_merged$delta_number_dives/1e6)
min_val <- min(explore_user_fee_merged$delta_number_dives/1e6)
min_ref <- min_val+0.6*(max_val-min_val)
#difference plot panel 4
data1<-explore_user_fee_merged %>% select(dive_tax, delta_number_dives, Scenario, run) %>% filter(Scenario =="With MPA")
data2<-explore_user_fee_merged %>% select(dive_tax, delta_number_dives, Scenario, run) %>% filter(Scenario =="No MPA")
diff_data <- left_join(data1,data2, by=c("dive_tax","run")) %>% mutate(difference = delta_number_dives.x-delta_number_dives.y)
mean_delta_number_dives_diff <- diff_data %>% group_by(dive_tax) %>% summarise(mean_delta_number_dives_diff = mean(difference))
panel4_diff <- diff_data %>% ggplot(aes(x=dive_tax,y=difference/1e6)) + geom_line(aes(group=run),size=1, alpha=0.01)+
geom_line(data=mean_delta_number_dives_diff, aes(x=dive_tax, y=mean_delta_number_dives_diff/1e6))+theme_classic()+labs(x ="User fee per dive\n(US$)", y = "Difference\n(million)")+ theme(legend.position = "none")+
theme(panel.background = element_rect(fill='transparent'),plot.background = element_rect(fill='transparent', color=NA),panel.grid.major = element_blank(),panel.grid.minor = element_blank(),legend.background = element_rect(fill='transparent'),legend.box.background = element_rect(fill='transparent'))+
ylim(0,max(diff_data$difference/1e6))
panel4_diff
panel4_inset <- panel4+annotation_custom(grob = ggplotGrob(panel4_diff), xmin=75, xmax=200, ymin=min_ref, ymax=max_val)
# extract legend
legend_b <- get_legend(panel1 + guides(color = guide_legend(nrow = 1)) + theme(legend.position = "bottom"))
##-- Plot FIGURE 4 with inset and save
plot_explore_user_fee_v1<- cowplot::plot_grid(panel1_inset,panel2_inset,panel3_inset,panel4_inset, ncol = 2, labels = "AUTO",rel_heights=c(1,1))
Fig4 <- cowplot::plot_grid(plot_explore_user_fee_v1, legend_b, ncol = 1, rel_heights=c(1,.05))
Fig4
#ggsave(here("figures","main","fig_4.jpg"),Fig4, width = 8, height = 8, units = "in")
# #--FIGURE 5
# data1 <- mean_taxrevenue_db %>% filter(Scenario == "With MPA")
# data2 <- mean_delta_dive_revenue %>% filter(Scenario == "With MPA")
# data3 <- left_join(data1,data2,by=c("Scenario","dive_tax")) %>% mutate(total_revenue=mean_taxrev+mean_delta_dive_revenue)
#
# data4 <- mean_taxrevenue_db %>% filter(Scenario == "No MPA")
# data5 <- mean_delta_dive_revenue %>% filter(Scenario == "No MPA")
# data6 <- left_join(data4,data5,by=c("Scenario","dive_tax")) %>% mutate(total_revenue=mean_taxrev+mean_delta_dive_revenue)
#
# ylim_min <- min(data3$mean_taxrev,data6$mean_taxrev,data3$mean_delta_dive_revenue,data6$mean_delta_dive_revenue)/1e9
# ylim_max <- max(data3$mean_taxrev,data6$mean_taxrev,data3$mean_delta_dive_revenue,data6$mean_delta_dive_revenue)/1e9
#
# library(geomtextpath)
# Fig5a <- data3 %>% ggplot() +   geom_textline(aes(x=dive_tax,y=mean_taxrev/1e9),label = "Dive fee revenue", size = 3, vjust = -0.5,
#                                              linewidth = 1, linecolor = "blue", linetype = "dotted", color = "black") +
#   geom_textline(aes(x=dive_tax,y=mean_delta_dive_revenue/1e9),label = "\u0394 dive industry revenue", size = 3, vjust = -0.5,
#                 linewidth = 1, linecolor = "red", linetype = "dashed", color = "black") +
#   geom_textline(aes(x=dive_tax,y=total_revenue/1e9),label = "Total revenue", size = 3, vjust = -0.5,
#                 linewidth = 1, linecolor = "black", color = "black")+ theme_minimal()+labs(x ="User fee per dive\n(US$)", y = "Revenue\n(US$ billion)")+ggtitle("With MPA")+ylim(ylim_min,ylim_max)
#
# Fig5b <- data6 %>% ggplot() +   geom_textline(aes(x=dive_tax,y=mean_taxrev/1e9),label = "Dive fee revenue", size = 3, vjust = -0.5,
#                                                    linewidth = 1, linecolor = "blue", linetype = "dotted", color = "black") +
#   geom_textline(aes(x=dive_tax,y=mean_delta_dive_revenue/1e9),label = "\u0394 dive industry revenue", size = 3, vjust = -0.5,
#                 linewidth = 1, linecolor = "red", linetype = "dashed", color = "black") +
#   geom_textline(aes(x=dive_tax,y=total_revenue/1e9),label = "Total revenue", size = 3, vjust = -0.5, linewidth = 1, linecolor = "black",
#                 color = "black")+ theme_minimal()+labs(x ="User fee per dive\n(US$)", y = "Revenue\n(US$ billion)")+ggtitle("No MPA")+ylim(ylim_min,ylim_max)
# Fig5 <- cowplot::plot_grid(Fig5a,Fig5b, ncol = 2, labels = "AUTO")
# Fig5
#
# ggsave(here("figures","main","Fig5.jpg"),Fig5, width = 8, height = 4, units = "in")
#plot_explore_user_fee_v1 <- cowplot::plot_grid(panel1,panel1_diff,panel2,panel2_diff,panel3,panel3_diff,panel4,panel1_diff, ncol = 2, labels = "AUTO",rel_heights=c(1,1))
#plot_explore_user_fee_v2 <- cowplot::plot_grid(plot_explore_user_fee_v1, legend_b, ncol = 1, rel_heights=c(1,.05))
#plot_explore_user_fee_v2
#ggsave(here("figures","main","plot_explore_user_fee.jpg"),plot_explore_user_fee_v2, width = 6, height = 10, units = "in")
### Outdated figure code - Figure 3 --------------------------------------------
# #with MPA, then user fee of 13 USD per dive (to be exact, check the average user fee)
# component_effect_name <- round(effect_name/average_user_fee,4)
# component_biomass_effect <- round(mean(effect_biomass)/average_user_fee,4)
# component_biodiversity_effect <- round(mean(effect_biodiversity)/average_user_fee,4)
#
# pie_theme <- theme_void()+
#   theme(legend.position = "none", # Removes the legend
#                    plot.title = element_text(hjust = 0.5))
#
# pie_dat <- data.frame(value = c(component_effect_name, component_biomass_effect, component_biodiversity_effect),
#                       Component = c("MPA name effect","Biomass effect","Biodiversity effect")) %>%
#   mutate(csum = rev(cumsum(rev(value))),
#          pos = value/2 + lead(csum, 1),
#          pos = if_else(is.na(pos), value/2, pos))
#
# fig_3_a <- ggplot(pie_dat , aes(x = "", y = value, fill = fct_inorder(Component))) +
#   geom_col(color = "black") +
#   coord_polar(theta = "y") +
#   ggtitle("Drivers of global MPA benefits")+
#   geom_label_repel(data = pie_dat,
#                    aes(y = pos, label = paste0(Component, "\n", percent(value))),
#                    size = 4.5, nudge_x = c(0.8, 1, 1.3), show.legend = FALSE) +
#   pie_theme
#
# fig_3_a  #ok, this is the contribution of different components
#
# p1_contribution <- data.frame(value = c(component_effect_name, component_biomass_effect, component_biodiversity_effect), Component = c("MPA name","Biomass","Biodiversity")) %>%
#   ggplot(aes(x = "", y = value, fill = Component)) + geom_col(color = "black") +
#   geom_text(aes(label = percent(value)), position = position_stack(vjust = 0.5)) +
#   coord_polar(theta = "y") +  ggtitle("Drivers of MPA benefits")+
#   theme_void() + theme(plot.title = element_text(hjust = 0.5))
# p1_contribution #contribution of different components (name, biodiv, biomass) to WTP
#
# #Proportion of foreign and local divers per region
# #Load this csv file: local_vs_foreign_tourist_origins_by_region
diver_origin <- read.csv(here("data","dive","local_vs_foreign_tourist_origins_by_region.csv")) %>% dplyr::rename(Origin=origin)
#
# #--consumer surplus beneficiaries by region and diver origin
# #remove the pixels that are in MPA
# ndives_data_v1 <- dives_input[dives_input$cell_id %in% divepixels_unprotected,]
# ndives_data_v2 <- left_join(ndives_data_v1,cell_id_with_country_kat_withregion,by="cell_id") %>% select(cell_id,n_dives_extrap,n_dives_extrap_min,n_dives_extrap_max,region_fill)
#
# #consumer_surplus_per_region <- ndives_data_v2 %>% mutate(consumer_surplus = 0.5*n_dives_extrap*(choke_price-price_per_dive_constant[1])) %>% group_by(region_fill) %>% summarise(consumer_surplus_per_region = sum(consumer_surplus)/1e6) %>% drop_na() %>% dplyr::rename(region=region_fill)
# #this just tracks the beneficiaries of the change in consumer surplus due to MPA
# consumer_surplus_per_region <- ndives_data_v2 %>% mutate(consumer_surplus = change_consumer_suplus) %>% group_by(region_fill) %>% summarise(consumer_surplus_per_region = sum(consumer_surplus)/1e6) %>% drop_na() %>% dplyr::rename(region=region_fill)
#
# consumer_surplus_beneficiary <- left_join(diver_origin,consumer_surplus_per_region, by="region") %>% mutate(consumer_surplus = consumer_surplus_per_region*percent_avg/100)
#
# consumer_surplus_beneficiary$percent_avg<-round(consumer_surplus_beneficiary$percent_avg)
#
# df_sorted <- arrange(consumer_surplus_beneficiary, region, Origin)
# head(df_sorted)
#
# df_cumsum <- df_sorted %>% group_by(region) %>% mutate(label_ypos=cumsum(consumer_surplus))
#
# sum(df_cumsum$consumer_surplus)
#
# p2_dissagregated <- df_cumsum %>% ggplot(aes(x=region, y=consumer_surplus, fill=Origin, label=scales::percent(percent_avg/100,accuracy = 1L))) +
#   geom_bar(stat="identity") + geom_text(size = 3, position = position_stack(vjust = 0.5))+
#   scale_fill_brewer(palette="Paired")+
#   labs(x="",y="Consumer surplus\n(US$ million)")+
#   theme_minimal()+
#   ggtitle("Consumer surplus beneficiaries\nby region and diver origin")+
#   theme(axis.title.x=element_blank(),axis.text.x=element_blank(),axis.ticks.x=element_blank())
# p2_dissagregated
#
# #-- consumer surplus beneficiaries by foreign and local
# p2_development <- consumer_surplus_beneficiary  %>% group_by(Origin) %>% summarise(total_consumer_surplus=sum(consumer_surplus)) %>%
#   mutate(countT= sum(total_consumer_surplus), Percent_Contribution = total_consumer_surplus/countT) %>%
#   ggplot(aes(x = "", y = Percent_Contribution, fill = Origin)) + geom_col(color = "black") +
#   geom_text(aes(label = percent(Percent_Contribution)), position = position_stack(vjust = 0.5)) +
#   ggtitle("Consumer surplus beneficiaries") + coord_polar(theta = "y") +
#   scale_fill_brewer(palette="Blues") + theme_void() + theme(plot.title = element_text(hjust = 0.5))
# p2_development
#
# # # #consumer surplus for developing countries only
# # head(ndives_data_v2)
# # dim(ndives_data_v2)
# # head(country_classification)
# # left_join(country_classification,by="territory1")
# # step1<-ndives_data_v2 %>% mutate(consumer_surplus = 0.5*n_dives_extrap*(choke_price-price_per_dive_constant[1]))
# # left_join(step1,country_classification,by="territory1") %>% dim()
# # #%>% group_by(region_fill) %>% summarise(consumer_surplus_per_region = sum(consumer_surplus)/1e6) %>% drop_na() %>% dplyr::rename(region=region_fill)
# # # dive_per_country[dive_per_country$cell_id %in% divepixels_unprotected,] %>% left_join(country_classification,by="territory1") %>% select(cell_id,Classification,region_fill,n_dives_extrap) %>% head()
#
# #-- Apply tax and track beneficiaries.
# dive_tax <- mean(user_fee_opt)
#
# #shifted number of dives with tax
# shifted_number_dive <- round(parameter_a - parameter_b*price_per_dive_constant + ((effect_name+effect_biomass+effect_biodiversity-dive_tax)*base_number_dive/(choke_price-price_per_dive_constant)))
# min(shifted_number_dive)
# plot((shifted_number_dive - base_number_dive))
# tax_revenue <- dive_tax*shifted_number_dive
# sum(tax_revenue)/1e9 #this is how much you can get from pixel-specific tax when establishing an MPA and imposing tax that does not affect dive numbers
#
# #-- the code below is not needed
# # dive_tax <- mean(user_fee_opt)
# # price_per_dive <- cons_price_per_dive
#
# # #shifted number of dives with crowding and with tax
# # delta_q_crowding <- (wtp_combined - dive_tax)*base_number_dive/(choke_price-price_per_dive)
# # shifted_number_dive_withcrowding <- base_number_dive + delta_q_crowding*(1-(reduce_wtp_crowd*dive_group_size*delta_q_crowding/base_number_dive))
# # shifted_number_dive_withcrowding[shifted_number_dive_withcrowding<0]<-0
# # sum(shifted_number_dive_withcrowding)
# #
# # #with crowding effect and with MPA
# # change_dive_revenue_withcrowding <- price_per_dive*(shifted_number_dive_withcrowding - base_number_dive) # in USD
# # new_choke_price_withcrowding <- (parameter_a+((wtp_combined-dive_tax)*base_number_dive/(choke_price-price_per_dive)))/parameter_b
# # change_consumer_suplus_withcrowding <- (0.5*shifted_number_dive_withcrowding*(new_choke_price_withcrowding-price_per_dive))-(0.5*base_number_dive*(choke_price-price_per_dive))
# # tax_revenue_withcrowding <- dive_tax*shifted_number_dive_withcrowding
# # explore_user_fee_withcrowding<-c(dive_tax,sum(shifted_number_dive_withcrowding)-sum(base_number_dive),sum(change_dive_revenue_withcrowding),sum(change_consumer_suplus_withcrowding),sum(tax_revenue_withcrowding))%>%
# #   setNames(., c("dive tax", "N dives", "Change dive revenue","Change consumer surplus","Tax revenue"))
# # length(tax_revenue_withcrowding)# length is 1792
# #---
#
head(dive_per_country)
cell_developmentstatus <- dive_per_country[dive_per_country$cell_id %in% divepixels_unprotected,] %>% left_join(country_classification,by="territory1") %>% select(cell_id,Classification,region_fill,n_dives_extrap)
dim(cell_developmentstatus)
#
# #edit this once we have the true data
# cs_dat <- cell_developmentstatus %>%
#   group_by(Classification) %>%
#   summarise(Contribution=round(sum(tax_revenue)/10^6))%>%
#   filter(Classification %in% c("Developed", "Developing")) %>%
#   mutate(Percent_Contribution = Contribution/sum(Contribution)) %>%
#   mutate(Percent_Contribution = replace(Percent_Contribution, Classification == "Developed", 0.80)) %>%
#   mutate(Percent_Contribution = replace(Percent_Contribution, Classification == "Developing", 0.20)) %>%
#   mutate(csum = rev(cumsum(rev(Percent_Contribution))),
#          pos = Percent_Contribution/2 + lead(csum, 1),
#          pos = if_else(is.na(pos), Percent_Contribution/2, pos))
#
# fig_3_b <- ggplot(cs_dat, aes(x = "", y = Percent_Contribution, fill = fct_inorder(Classification))) +
#   geom_col(color = "black") +
#   ggtitle("Consumer surplus beneficiaries")+
#   coord_polar(theta = "y") +
#   geom_label_repel(data = cs_dat,
#                    aes(y = pos, label = paste0(Classification, "\n", percent(Percent_Contribution))),
#                    size = 4.5, nudge_x = c(0.9), show.legend = FALSE) +
#   scale_fill_brewer()+
#     #labels=c('Foreign','Local')) +
#   pie_theme
#
# fig_3_b
#
# tax_rev_dat <- cell_developmentstatus %>%
#   group_by(Classification) %>%
#   summarise(Contribution=round(sum(tax_revenue)/10^6))%>%
#   filter(Classification %in% c("Developed", "Developing")) %>%
#   mutate(Percent_Contribution = Contribution/sum(Contribution)) %>%
#   mutate(csum = rev(cumsum(rev(Percent_Contribution))),
#          pos = Percent_Contribution/2 + lead(csum, 1),
#          pos = if_else(is.na(pos), Percent_Contribution/2, pos))
#
# fig_3_c <- ggplot(tax_rev_dat, aes(x = "", y = Percent_Contribution, fill = fct_inorder(Classification))) +
#   geom_col(color = "black") +
#   ggtitle("Tax revenue beneficiaries")+
#   coord_polar(theta = "y") +
#   geom_label_repel(data = tax_rev_dat,
#                    aes(y = pos, label = paste0(Classification, "\n", percent(Percent_Contribution))),
#                    size = 4.5, nudge_x = c(0.9), show.legend = FALSE) +
#   scale_fill_brewer() +
#   pie_theme
#
# fig_3_c
#
# # combine into final plot
# fig_3_bottom_row <- cowplot::plot_grid(fig_3_b,
#                                        fig_3_c,
#                                        nrow = 1,
#                                        labels = c("B)", "C)"))
#
# fig_3 <- plot_grid(fig_3_a,
#                    fig_3_bottom_row,
#                    ncol = 1,
#                    rel_heights = c(2,1.5),
#                    labels = c("A)", ""))
#
# fig_3
#
# ggsave(here("figures","main","fig_3.jpg"),fig_3, width = 6.5, height = 6.75, units = "in")
#This is the summary table of results! with/without MPA and varying tax level.
head(explore_user_fee_merged)
#Summary table: with MPA, no tax. Just printing the change in biological parameters.
#this table will output the following:
#1. Pixel number of unprotected dive sites
#2. Change in biomass per MPA pixels
#3. Change in biodiversity metric per MPA pixel
# summary_table1 <- data.frame(pixel_number = divepixels_unprotected)
# summary_table1$change_biomass <- change_biomass_density_full
# summary_table1$change_diversity <- change_diversity_full
# summary_table1$change_ndive <-
# head(summary_table1)
#--add consumer surplus, no intervention
#cell_developmentstatus <-cell_developmentstatus %>% mutate(consumer_surplus = 0.5*n_dives_extrap*(choke_price-price_per_dive_constant[1]))
#add tax revenue (with MPA and tax=WTP), change consumer surplus from MPA, and  new dives from MPA (no tax)
cell_developmentstatus <-cell_developmentstatus %>% mutate(tax_revenue = tax_revenue, consumer_surplus = change_consumer_suplus, new_dive = new_dive_MPAnotax)
head(cell_developmentstatus)
dim(cell_developmentstatus)
data_1 <- cell_developmentstatus %>% filter(Classification=="Developing") %>%dplyr::rename(region=region_fill)
head(data_1)
dim(data_1)
checkme<-left_join(data_1,diver_origin,by="region") %>% mutate(consumer_surplus_development=consumer_surplus*percent_avg/100)
head(checkme)
###MANUSCRIPT STAT: % of consumer surplus in developing countries that is captured by foreign divers
checkme %>% group_by(Origin) %>% summarise(total_consumer_surplus=sum(consumer_surplus_development)) %>% drop_na() %>%
mutate(Total = sum(total_consumer_surplus), Fraction = total_consumer_surplus/Total) #67%
#PLOT THIS
cons_surp_beneficiaries <- checkme %>% group_by(Origin) %>% summarise(total_consumer_surplus=sum(consumer_surplus_development)) %>% drop_na() %>%
mutate(Total = sum(total_consumer_surplus), Fraction = total_consumer_surplus/Total) %>% ggplot(aes(x = "", y = Fraction, fill = Origin)) +
geom_col(color = "black") +
geom_text(aes(label = percent(Fraction)),position = position_stack(vjust = 0.5)) +
ggtitle("Consumer surplus beneficiaries\n of MPAs in developing countries")+
coord_polar(theta = "y") +
scale_fill_brewer(palette="Greens") +
theme_void()+   theme(plot.title = element_text(hjust = 0.5))
cons_surp_beneficiaries
##MANUSCRIPT STAT: Importantly, x% of new marine diving will be demanded developing countries
cell_developmentstatus %>% group_by(Classification) %>% summarise(ndive=sum(new_dive)) %>% filter(Classification %in% c("Developed","Developing")) %>%
mutate(Total = sum(ndive), Fraction = ndive/Total) #61%
#PLOT THIS
dive_demand_beneficiaries <- cell_developmentstatus %>% group_by(Classification) %>% summarise(ndive=sum(new_dive)) %>% filter(Classification %in% c("Developed","Developing")) %>%
mutate(Total = sum(ndive), Fraction = ndive/Total) %>% ggplot(aes(x = "", y = Fraction, fill = Classification)) +
geom_col(color = "black") +
geom_text(aes(label = percent(Fraction)),position = position_stack(vjust = 0.5)) +
ggtitle("Locations of new diving\n demand from MPAs")+
coord_polar(theta = "y") +
scale_fill_brewer(palette="Greens") +
theme_void()+   theme(plot.title = element_text(hjust = 0.5))
dive_demand_beneficiaries
Fig_supp_newdemand <- cowplot::plot_grid(dive_demand_beneficiaries,cons_surp_beneficiaries, ncol = 1, labels = "AUTO")
#ggsave(here("figures","supplementary","Fig_supp_newdemand.jpg"),Fig_supp_newdemand, width = 5, height = 8, units = "in")
# #tax revenue distribution
# p3_development <- cell_developmentstatus %>% group_by(Classification) %>% summarise(Contribution=round(sum(tax_revenue)/10^6))%>%
#   filter(Classification %in% c("Developed", "Developing")) %>% mutate(Percent_Contribution = Contribution/sum(Contribution)) %>%
#   ggplot(aes(x = "", y = Percent_Contribution, fill = Classification)) + geom_col(color = "black") +
#   geom_text(aes(label = percent(Percent_Contribution)), position = position_stack(vjust = 0.5)) +
#   #ylab("Contribution (US$ million)")
#   ggtitle("User fee revenue beneficiaries")+
#   coord_polar(theta = "y") +
#   scale_fill_brewer(palette="Reds") +
#   theme_void()+   theme(plot.title = element_text(hjust = 0.5))
# p3_development
#
# ##USER FEE REVENUE BY REGION BY DEV CATEGORY
# generate_data<-cell_developmentstatus %>% group_by(region_fill, Classification) %>% summarise(total_tax_revenue=sum(tax_revenue)/10^6) %>% drop_na() %>% filter(Classification!="In transition")
#
# # Create the barplot
# p3_dissagregated <- ggplot(data=generate_data, aes(x=region_fill, y=total_tax_revenue, fill=Classification)) +
#   geom_bar(stat="identity")+
#   scale_fill_brewer(palette="Reds")+
#   ggtitle("User fee revenue beneficiaries\nby region and country classification")+
#   labs(x="",y="Potential user fee revenue\n(US$ million)")+
#   theme_minimal()+theme(axis.text.x = element_text(angle=90, vjust=0.5,hjust=1))
# p3_dissagregated
#
# Fig3a <- cowplot::plot_grid(p1_contribution,p2_development,p3_development, ncol = 1, labels = "AUTO")
# Fig3b <- cowplot::plot_grid(p2_dissagregated,p3_dissagregated , ncol = 1, labels = c('D', 'E'))
# Fig3 <- cowplot::plot_grid(Fig3a,Fig3b,ncol=2)
# ggsave(here("figures","main","Fig3.jpg"),Fig3, width = 8, height = 8, units = "in")
# #This is the summary table of results! with/without MPA and varying tax level.
# head(explore_user_fee_merged)
#
# #Summary table: with MPA, no tax. Just printing the change in biological parameters.
# #this table will output the following:
# #1. Pixel number of unprotected dive sites
# #2. Change in biomass per MPA pixels
# #3. Change in biodiversity metric per MPA pixel
# summary_table1 <- data.frame(pixel_number = divepixels_unprotected)
# summary_table1$change_biomass <- change_biomass_density_full
# summary_table1$change_diversity <- change_diversity_full
# #summary_table1$change_ndive <-
# head(summary_table1)
##---SAVE DATA FOR PLOTTING. We need this
#save(biomass_data, land_shp_moll, explore_user_fee_merged, effect_name, effect_biomass, effect_biodiversity, average_user_fee,
#     dives_input, divepixels_unprotected, cell_id_with_country_kat_withregion, change_consumer_suplus, cell_developmentstatus, file = here("scripts","figures","Figure_data.RData"))
>>>>>>> 1e6abcd430b844333038a389871bf32f78ec3190
